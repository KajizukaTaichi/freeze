lang                : program

program             : (statement ";")+

program             : let_statement
                    | ass_statement
                    | func_def_statement
                    | unit_def_statement
                    | if_statement
                    | for_statement
                    | while_statement
                    | use_statement
                    | event_statement
                    | eexpr

let_statement       : "let" string ":" string "=" eexpr

ass_statement       : string ":" string "=" eexpr

func_def_statement  : "fn" string "(" (string ",")* ")" "->" string ":" program "end"

unit_def_statement  : "unit" string ":" (func_def_statement | let_statement)+ "end"

if_statement        : "if" eexpr ":" program "end"

for_statement       : "for" eexpr "to" eexpr "skip" eexpr ":" program "end"

while_statement     : "while" eexpr ":" program "end"

use_statement       : "use" string

event_statement     : "when" variable_call "do" func_call_statement

eexpr               : eq
                    | neq
                    | or
                    | and
                    | expr
                    | gt
                    | lt

eq                  : expr "==" eexpr

neq                 : expr "!=" eexpr

or                  : expr "||" eexpr

and                 : expr "&&" eexpr

gt                  : expr ">" eexpr

lt                  : expr "<" eexpr

epxr                : add
                    | sub
                    | term

add                 : term "+" expr

sub                 : term "-" expr

term                : mul
                    | div
                    | factor

mul                 : factor "*" term

div                 : factor "/" term

factor              : str
                    | number
                    | func_call_statement
                    | variable_call

str                 : "\"" string "\""

func_call_statement : (string ".")* string "(" (eexpr ",")* ")"

variable_call       : (string ".")* string
